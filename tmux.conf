# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Provide command to generate a 2:1 ratio layout
bind @ \
  split-window -h -c "#{pane_current_path}" -p 33 \;\
  select-pane -L \;\

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
setw -g mode-keys vi

# Set the prefix to ^A, like screen
unbind C-b
set -g prefix ^A
bind a send-prefix

# Start numbering windows at 1
set -g base-index 1

# automatically renumber remaining windows when closing a window
set-option -g renumber-windows on

bind ^a last-window # toggle last window like screen

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

# longer scrollback
set -g history-limit 10000

# pane colors
set-option -g pane-border-fg colour12
set-option -g pane-border-bg colour00
set-option -g pane-active-border-fg colour8
set-option -g pane-active-border-bg colour00

# mode colors
set-option -g mode-fg colour12
set-option -g mode-bg colour19
set-option -g mode-attr bold

# Command / message line
set-option -g message-fg colour21
set-option -g message-bg colour18
set-option -g message-attr bold

set-option -g status-justify left

# set-option the status line's colors
set-option -g status-fg colour7
set-option -g status-bg colour18

# Window status format
set-option -g window-status-format " #I #W "
set-option -g window-status-current-format "#[fg=colour18,bg=colour12,nobold] #I #[fg=colour12,bg=colour19,nobold] #W "

# Status line left side
set-option -g status-left-length 40
set-option -g status-left '#[fg=colour18,bg=colour12,bold] #S #[fg=colour12,bg=colour19,nobold]#[fg=colour7,bg=colour19] %R #[fg=colour19,bg=colour18]   '

# Status line right side
#set-option -g status-right-length 150
set-option -g status-right '#[fg=colour19,bg=colour18]#[fg=colour7,bg=colour19] %d %b #[fg=colour12,bg=colour19,nobold]#[fg=colour18,bg=colour12,bold] #h '

# Update the status bar every sixty seconds
set-option -g status-interval 60

# disable mouse mode by default
set -g mouse off

# Toggle mouse on with m
bind m set -g mouse on \; display 'Mouse: ON'

# Toggle mouse off with M
bind M set -g mouse off \; display 'Mouse: OFF'

# reload tmux config file with C-a r
bind r source ~/.tmux.conf

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind c new-window -c '#{pane_current_path}'

# Rebind prefix to b
bind B set -g prefix ^b
bind A set -g prefix ^a

# Works with ~/.ssh/rc to allow re-attaching to tmuxes after ssh reconnect
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# Toggle synchronize-panes with C-a y
bind y set synchronize-panes

set -g default-terminal "tmux" # use 'tmux' instead of 'screen-*' to enable italics support per tmux FAQ
set-option -ga terminal-overrides ",*256col*:Tc"
