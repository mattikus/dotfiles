# Functions

function ztmpl() {
  if [[ $1.tmpl -nt $1 || (! -f $1 && -f $1.tmpl) ]] ; then
    # echo "Using $1.tmpl as the template to make $1..."
    local foo="$(print -bP "$(cat $1.tmpl)")"
    echo ${(e)foo} > $1
  fi
}

function wz() { 
  wget "$1" -O- | tar xzf - 
}
function wj() { 
  wget "$1" -O- | tar xjf - 
}
function confmake() {
  ./configure "$@" && make -j3
}

# If I am using vi keys, I want to know what mode I'm currently using.
# zle-keymap-select is executed every time KEYMAP changes.
# From http://zshwiki.org/home/examples/zlewidgets
function zle-line-init zle-keymap-select {
    VIMODE="${${KEYMAP/vicmd/[c]}/(main|viins)/[i]}"
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Executed before each prompt
function precmd {
  vcs_info 'prompt'
}

function setprompt () {
  # Need this, so the prompt will work
  setopt prompt_subst

  # let's load colors into our environment, then set them
  autoload colors

  if [[ "$terminfo[colors]" -gt 8 ]]; then
      colors
  fi

  # Finally, let's set the prompt
  PROMPT='%{$fg[magenta]%}%n %{$fg[white]%}at %{$fg[yellow]%}%m %{$fg[white]%}in %{$fg[green]%}%~ \

%{$fg[white]%}%%%{$reset_color%} '
  RPROMPT='${vcs_info_msg_0_}%{$fg[cyan]%}${VIMODE}%{$reset_color%}'
}


# vim:ft=zsh
